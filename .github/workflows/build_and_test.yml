name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.9.0
        env:
          CIBW_SKIP: pp*
          CIBW_ARCHS_MACOS: auto universal2
          CIBW_TEST_REQUIRES: nose
          CIBW_TEST_COMMAND: "nosetests {project}/tests"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_aarch64_wheel:
    name: "Build aarch64"
    strategy:
      #matrix:
        #pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    #env:
      #py: /opt/python/${{ matrix.pyver }}/bin/python
      #img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.9'    
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build wheels
      uses: joerick/cibuildwheel@v1.9.0
      env:
        CIBW_SKIP: pp*
        CIBW_ARCHS_LINUX: aarch64 
        CIBW_TEST_REQUIRES: nose
        CIBW_TEST_COMMAND: "nosetests {project}/tests"
    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl
        
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
